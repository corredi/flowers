/*
 * This file is generated by jOOQ.
 */
package com.accenture.flowershop.be.entity.jooqent.public_.tables.records;


import com.accenture.flowershop.be.entity.jooqent.public_.tables.Customer;

import java.math.BigDecimal;

import javax.annotation.Generated;

import org.jooq.Field;
import org.jooq.Record1;
import org.jooq.Record6;
import org.jooq.Row6;
import org.jooq.impl.UpdatableRecordImpl;


/**
 * This class is generated by jOOQ.
 */
@Generated(
    value = {
        "http://www.jooq.org",
        "jOOQ version:3.11.3"
    },
    comments = "This class is generated by jOOQ"
)
@SuppressWarnings({ "all", "unchecked", "rawtypes" })
public class CustomerRecord extends UpdatableRecordImpl<CustomerRecord> implements Record6<String, String, String, String, BigDecimal, Integer> {

    private static final long serialVersionUID = 1557207483;

    /**
     * Setter for <code>PUBLIC.CUSTOMER.LOGIN</code>.
     */
    public void setLogin(String value) {
        set(0, value);
    }

    /**
     * Getter for <code>PUBLIC.CUSTOMER.LOGIN</code>.
     */
    public String getLogin() {
        return (String) get(0);
    }

    /**
     * Setter for <code>PUBLIC.CUSTOMER.PASSWORD</code>.
     */
    public void setPassword(String value) {
        set(1, value);
    }

    /**
     * Getter for <code>PUBLIC.CUSTOMER.PASSWORD</code>.
     */
    public String getPassword() {
        return (String) get(1);
    }

    /**
     * Setter for <code>PUBLIC.CUSTOMER.ADDRESS</code>.
     */
    public void setAddress(String value) {
        set(2, value);
    }

    /**
     * Getter for <code>PUBLIC.CUSTOMER.ADDRESS</code>.
     */
    public String getAddress() {
        return (String) get(2);
    }

    /**
     * Setter for <code>PUBLIC.CUSTOMER.PHONE</code>.
     */
    public void setPhone(String value) {
        set(3, value);
    }

    /**
     * Getter for <code>PUBLIC.CUSTOMER.PHONE</code>.
     */
    public String getPhone() {
        return (String) get(3);
    }

    /**
     * Setter for <code>PUBLIC.CUSTOMER.MONEY</code>.
     */
    public void setMoney(BigDecimal value) {
        set(4, value);
    }

    /**
     * Getter for <code>PUBLIC.CUSTOMER.MONEY</code>.
     */
    public BigDecimal getMoney() {
        return (BigDecimal) get(4);
    }

    /**
     * Setter for <code>PUBLIC.CUSTOMER.DISCOUNT</code>.
     */
    public void setDiscount(Integer value) {
        set(5, value);
    }

    /**
     * Getter for <code>PUBLIC.CUSTOMER.DISCOUNT</code>.
     */
    public Integer getDiscount() {
        return (Integer) get(5);
    }

    // -------------------------------------------------------------------------
    // Primary key information
    // -------------------------------------------------------------------------

    /**
     * {@inheritDoc}
     */
    @Override
    public Record1<String> key() {
        return (Record1) super.key();
    }

    // -------------------------------------------------------------------------
    // Record6 type implementation
    // -------------------------------------------------------------------------

    /**
     * {@inheritDoc}
     */
    @Override
    public Row6<String, String, String, String, BigDecimal, Integer> fieldsRow() {
        return (Row6) super.fieldsRow();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Row6<String, String, String, String, BigDecimal, Integer> valuesRow() {
        return (Row6) super.valuesRow();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Field<String> field1() {
        return Customer.CUSTOMER.LOGIN;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Field<String> field2() {
        return Customer.CUSTOMER.PASSWORD;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Field<String> field3() {
        return Customer.CUSTOMER.ADDRESS;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Field<String> field4() {
        return Customer.CUSTOMER.PHONE;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Field<BigDecimal> field5() {
        return Customer.CUSTOMER.MONEY;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Field<Integer> field6() {
        return Customer.CUSTOMER.DISCOUNT;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public String component1() {
        return getLogin();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public String component2() {
        return getPassword();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public String component3() {
        return getAddress();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public String component4() {
        return getPhone();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public BigDecimal component5() {
        return getMoney();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Integer component6() {
        return getDiscount();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public String value1() {
        return getLogin();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public String value2() {
        return getPassword();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public String value3() {
        return getAddress();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public String value4() {
        return getPhone();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public BigDecimal value5() {
        return getMoney();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Integer value6() {
        return getDiscount();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public CustomerRecord value1(String value) {
        setLogin(value);
        return this;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public CustomerRecord value2(String value) {
        setPassword(value);
        return this;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public CustomerRecord value3(String value) {
        setAddress(value);
        return this;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public CustomerRecord value4(String value) {
        setPhone(value);
        return this;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public CustomerRecord value5(BigDecimal value) {
        setMoney(value);
        return this;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public CustomerRecord value6(Integer value) {
        setDiscount(value);
        return this;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public CustomerRecord values(String value1, String value2, String value3, String value4, BigDecimal value5, Integer value6) {
        value1(value1);
        value2(value2);
        value3(value3);
        value4(value4);
        value5(value5);
        value6(value6);
        return this;
    }

    // -------------------------------------------------------------------------
    // Constructors
    // -------------------------------------------------------------------------

    /**
     * Create a detached CustomerRecord
     */
    public CustomerRecord() {
        super(Customer.CUSTOMER);
    }

    /**
     * Create a detached, initialised CustomerRecord
     */
    public CustomerRecord(String login, String password, String address, String phone, BigDecimal money, Integer discount) {
        super(Customer.CUSTOMER);

        set(0, login);
        set(1, password);
        set(2, address);
        set(3, phone);
        set(4, money);
        set(5, discount);
    }
}
